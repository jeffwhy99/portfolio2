{"version":3,"sources":["photos/sapporo_xmas.jpg","photos/sapporo_xmas_tn.jpg","photos/mark_novo_ss.png","photos/work_ss.png","About.js","Card.js","Work.js","ScrollToTop.js","ProjMyWebsite.js","ProjFoodie.js","App.js","serviceWorker.js","index.js","photos/thumbnail_template.jpg"],"names":["module","exports","About","props","className","src","Portrait","alt","Card","photo","name","desc","Work","to","Thumbnail","ScrollToTop","prevProps","this","location","window","scrollTo","children","Component","withRouter","ProjMyWebsite","NovoSS","ProjFoodie","Photo1","App","id","exact","path","component","href","target","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68ddda45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sapporo_xmas.ded4d7a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sapporo_xmas_tn.9aa76543.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mark_novo_ss.425dca41.png\";","module.exports = __webpack_public_path__ + \"static/media/work_ss.3c692e28.png\";","import React from \"react\"\nimport Portrait from \"./photos/sapporo_xmas.jpg\"\n\nfunction About(props) {\n    return (\n        <div className=\"about-row\">\n            <div className=\"about-col1\">\n                <img src={Portrait} alt=\"me\" className=\"portrait\" />\n            </div>\n            <div className=\"about-col2\">\n                <h1 className=\"intro-h\">\n                    Hello, <br />\n                    I’m a UX designer based in Palo Alto, CA.\n                </h1>\n                <br /><br />\n                <p className=\"intro\">\n                    I chose this career path because I enjoy doing creative work and interacting with other people—the latter was amplified tenfold by COVID-19. I care about designing products that are original, impactful, and of course, usable.\n                </p>\n                <p className=\"intro\">\n                <br />\n                   My methodology is fairly standard and can be summarized in 3 steps. First, I <b>discover</b> the situation by doing research. Next, I <b>define</b> the problems that need to be addressed. With clear goals written out, I <b>design</b> a new solution—but it doesn't end there. The new solution becomes a prototype that needs to go through usability testing, which takes me back to the <b>discover</b> phase. The cycle repeats until the outcome is satisfactory to me and approved by my users.\n                </p>\n                <p className=\"intro\">\n                <br />\n                   Some of my hobbies include drawing, anime, basketball, karaoke, and snowboarding. If you're familiar with personality types, the test said that I'm an INFP, although this pandemic probably transformed me into an ENFP.\n                </p>   \n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React from \"react\"\n\nfunction Card(props) {\n    return (\n        <div className=\"card-row\">\n            <div className=\"card-col1\">\n                <img src={props.photo} alt=\"a cup of coffee\" className=\"thumbnail\"/>\n            </div>\n            <div className=\"card-col2\" >\n                <h1 className=\"card-name\">{props.name} </h1>\n                <p className=\"card-desc\">\n                    <br/> {props.desc} \n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\"\nimport Card from \"./Card\"\nimport Thumbnail from \"./photos/thumbnail_template.jpg\"\nimport { Link } from 'react-router-dom';\nimport Portrait from \"./photos/sapporo_xmas_tn.jpg\"\n \nfunction Work(props) {\n        return (\n            <div>\n                    <Link to=\"/work/foodie\">\n                        <Card name=\"Foodie\" desc=\"This section is incomplete. Will update on 12/12.\" photo={Thumbnail} />\n                    </Link>\n                    {/* <Link to=\"/work/securate\">\n                        <Card name=\"Securate\" desc=\"I designed an app that determines the how intrusive other apps are.\" photo={Thumbnail} />\n                    </Link> */}\n                    <Link to=\"/work/this+website\">\n                        <Card name=\"This Website\" desc=\"This explains the design and development process of this website (incomplete).\" photo={Portrait} />\n                    </Link>\n            </div>\n        )\n}\n \nexport default Work;","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    \n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0, 0)\n      }\n    }\n  \n    render() {\n      return this.props.children\n    }\n  }\n  \n  export default withRouter(ScrollToTop)","import React from \"react\"\nimport NovoSS from \"./photos/mark_novo_ss.png\"\nimport WorkSS from \"./photos/work_ss.png\"\n\nfunction ProjMyWebsite(props) {\n    return (\n        <div className=\"project-body\">\n            {/* <img src={Thumbnail} alt=\"a photo of me\" className=\"project-photo\" /> */}\n            <h1 className=\"project-title\">This Website</h1>\n            <p className=\"project-article\">\n                To find a job in UX design, I needed a portfolio so I spent the summer of 2020 making my website. I chose not to use a website builder like Squarespace because I did not want to limit myself with their existing templates; I wanted my website to be unique. Furthermore, I wanted to review the skills I learned in my client-side and server-side development classes; this was a great opportunity for me to practice the process of designing, coding, and deploying a website.\n            </p>\n            <br/>\n            <img src={NovoSS} alt=\"Mark Novo website template\" className=\"project-photo\" />\n            <p className=\"project-article\">\n            <br/>\n                First, I took a look at existing portfolios and Squarespace templates for inspiration. I liked the aesthetic of the Mark Novo template; however, in terms of usability, there are a few places where it could be improved. First, the title for each project only appears when hovered over. Because it is impossible to hover on mobile and the mobile version looks the same, titles do not appear at all. Second, an article I read recommended only displaying your top three projects on your portfolio so that employers would have the patience to look through them. With only three projects, it would look silly to display them in two columns.\n            </p>\n            <br/>\n            {/* <img src={WorkSS} alt=\"prototype of the 'Work' page\" className=\"project-photo\" /> */}\n            <p className=\"project-article\">\n                To be continued . . .\n                {/* As you can probably tell from this website, I am a big fan of minimalism and believe that things should be kept as simple as possible for users to learn and use. Furthermore, a minimalistic site with monotone colors to make photos of work stand out more.My site only has two items on the nav bar if you exclude my name (which also takes you to the \"About\" screen) but I believe that these two items cover all the reasons why someone would visit my site. Other than these two items, I would have added a third one for \"Contact\" but I decided to follow the norm and have my contact information in the footer of the site. I did not write my name in the introduction because it is already written at the top of the website and I am not a fan of repetitive information. In order to make my site's usage as efficient as possible, I never repeat information so users will never spend extra time reading the same information twice. Debate whether logo should take you to home page. */}\n            </p>\n            <p className=\"project-article\">\n                {/* Initially, I wanted to find a geometric font that had a condensed counterpart because that would allow the two fonts to synchronize well. There are not too many geometric fonts on Google Fonts so such a font did not exist so I gave up on the geometric part. I tried Open Sans along with Open Sans Condensed but the capital \"J\" letter really bothered me because it protruded out the bottom. Because my name has a \"J\" in it, this made the logo look awful. The other condensed fonts didn't fit the aesthetic I was going for. Thus, I changed my plan and ended up going for just a geometric font instead. Instead of having a condensed counter part, I would just use different weights along with capitalization to make it seem like two different fonts with synergy. The most popular geometric font on Google Fonts is Montserrat but I personally do not like the way the capital \"J\" and \"G\" look. Thus, I ended up finding a font called Poppins that has a perfectly circular capital G similar to Futura, which I am a fan of. */}\n            </p>\n        </div>\n    )\n}\n\nexport default ProjMyWebsite;","import React from \"react\"\nimport Photo1 from \"./photos/thumbnail_template.jpg\"\n\nfunction ProjFoodie(props) {\n    return (\n        <div className=\"project-body\">\n            <img src={Photo1} alt=\"a cup of coffee\" className=\"project-photo\" />\n            <h1 className=\"project-title\">Foodie</h1>\n            <p className=\"project-article\">\n                This is just a test.\n            </p>\n        </div>\n    )\n}\n\nexport default ProjFoodie;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport About from './About.js'\nimport Work from './Work.js'\nimport ScrollToTop from './ScrollToTop.js'\nimport ProjMyWebsite from './ProjMyWebsite';\nimport ProjFoodie from './ProjFoodie'\n\nfunction App() {\n  // TODO: Fix link iteraction (active link should be white)\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollToTop>\n          <nav>\n            <Link to=\"/about\" id=\"logo\">Jeffrey Wang</Link>\n            <div className=\"nav-row\">\n              <Link to=\"/about\" className=\"nav-col\">About</Link>\n              <Link to=\"/work\" className=\"nav-col\">Work</Link>\n            </div>\n          </nav>\n          <Switch>\n            <Redirect exact path=\"/\" to=\"/about\" />\n            <Route path=\"/about\" component={About} />\n            <Route exact path=\"/work\" component={Work} />\n            <Route path=\"/work/foodie\" component={ProjFoodie} />\n            <Route path=\"/work/this+website\" component={ProjMyWebsite} />\n          </Switch>\n        </ScrollToTop>\n      </BrowserRouter>\n      <footer>\n        <h1 id=\"contact\">Contact</h1>\n        <br />\n        <a className=\"contact-info\" href=\"https://www.linkedin.com/in/jeffrey-wang-327b0915b/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n        <a className=\"contact-info\" href=\"mailto:jeffwhy99@gmail.com\">Mail</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/thumbnail_template.14349c9b.jpg\";"],"sourceRoot":""}