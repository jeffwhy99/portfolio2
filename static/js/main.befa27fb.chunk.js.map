{"version":3,"sources":["photos/blue_portrait.jpg","photos/sushi_tn.jpg","photos/blue_flower.jpg","photos/blue_pic.jpg","photos/mark_novo_ss.png","photos/portfolio_figma/about_figma.png","photos/portfolio_figma/work_figma.png","photos/portfolio_figma/proj_figma.png","photos/sushi.jpg","photos/foodie_research/hours_daily.png","photos/foodie_research/features_known.png","photos/foodie_research/foodie_card_sort.png","photos/foodie_persona.jpg","photos/foodie_ia/recipe_ia.png","photos/foodie_ia/community_ia.png","photos/foodie_ia/account_ia.png","photos/foodie_figma.png","photos/thumbnail_template.jpg","About.js","Card.js","Work.js","ScrollToTop.js","ProjMyWebsite.js","ProjSecurate.js","ProjFoodie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","props","className","src","Portrait","alt","Card","photo","name","desc","Work","to","FoodieTN","ScrollToTop","prevProps","this","location","window","scrollTo","children","Component","withRouter","ProjMyWebsite","BluePic","NovoSS","AboutFigma","WorkFigma","ProjFigma","ProjSecurate","ProjFoodie","SushiPhoto","href","target","rel","HoursPhoto","KnownPhoto","PersonaPhoto","SortPhoto","RecipeIA","CommunityIA","AccountIA","ProtoPhoto","App","id","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.befa27fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue_portrait.6a88b515.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sushi_tn.bc08ff29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue_flower.4acc4bb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue_pic.296cf975.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mark_novo_ss.14dbbea4.png\";","module.exports = __webpack_public_path__ + \"static/media/about_figma.06685698.png\";","module.exports = __webpack_public_path__ + \"static/media/work_figma.1d96f357.png\";","module.exports = __webpack_public_path__ + \"static/media/proj_figma.3948fa6c.png\";","module.exports = __webpack_public_path__ + \"static/media/sushi.637973f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hours_daily.5fa42e1f.png\";","module.exports = __webpack_public_path__ + \"static/media/features_known.ac77b33d.png\";","module.exports = __webpack_public_path__ + \"static/media/foodie_card_sort.193f8e4b.png\";","module.exports = __webpack_public_path__ + \"static/media/foodie_persona.063a44ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/recipe_ia.2f364253.png\";","module.exports = __webpack_public_path__ + \"static/media/community_ia.d3736967.png\";","module.exports = __webpack_public_path__ + \"static/media/account_ia.62485b4e.png\";","module.exports = __webpack_public_path__ + \"static/media/foodie_figma.efb805bb.png\";","module.exports = __webpack_public_path__ + \"static/media/thumbnail_template.14349c9b.jpg\";","import React from \"react\"\nimport Portrait from \"./photos/blue_portrait.jpg\"\n\nfunction About(props) {\n    return (\n        <div className=\"about-row\">\n            <div className=\"about-col1\">            \n                <img  src={Portrait} alt=\"me\" className=\"portrait\" />\n            </div>\n            <div className=\"about-col2\">\n                <h2 className=\"intro-head\">\n                    Hello, <br />\n                    I’m a UX designer based in Palo Alto, CA.\n                </h2>\n                <br /><br />\n                <p className=\"intro\">\n                    I am currently a senior studying informatics with a focus in HCI at the University of Washington. I chose this career path because I enjoy doing creative work and interacting with others. I care about designing products that are original, impactful, and of course, usable. \n                </p>\n                {/* <p className=\"intro\">\n                <br />\n                   My methodology is fairly standard and can be summarized in 3 steps. First, I <b>discover</b> the situation by doing research. Next, I <b>define</b> the problems that need to be addressed. With clear goals written out, I <b>design</b> a new solution—but it doesn't end there. The new solution becomes a prototype that needs to go through usability testing, which takes me back to the <b>discover</b> phase. The cycle repeats until the outcome is satisfactory to me and approved by my users.\n                </p> */}\n                {/* <p className=\"intro\">\n                <br />\n                   Some of my hobbies include drawing, basketball, and karaoke. Recently, <i>Attack on Titan</i> and <i>The Mandalorian</i> have been two of my favorite shows.\n                </p> */}\n                {/* If you're familiar with <a href=\"https://www.16personalities.com/personality-types\">personality types</a> . . . */}\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React from \"react\"\n\nfunction Card(props) {\n    return (\n        <div className=\"card-row\">\n            <div className=\"card-col1\">\n                <img src={props.photo} alt=\"a cup of coffee\" className=\"thumbnail\"/>\n            </div>\n            <div className=\"card-col2\" >\n                <h1 className=\"card-name\">{props.name} </h1>\n                <p className=\"card-desc\">\n                    <br/> {props.desc} \n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\"\nimport Card from \"./Card\"\nimport Thumbnail from \"./photos/thumbnail_template.jpg\"\nimport FoodieTN from \"./photos/sushi_tn.jpg\"\nimport { Link } from 'react-router-dom';\nimport Portrait from \"./photos/blue_flower.jpg\"\n \nfunction Work(props) {\n        return (\n            <div>\n                    <Link to=\"/work/foodie\">\n                        <Card name=\"Foodie\" desc=\"I designed an app for foodies.\" photo={FoodieTN} />\n                    </Link>\n                    {/* <Link to=\"/work/securate\">\n                        <Card name=\"Securate\" desc=\"I designed an app that determines the how intrusive other apps are. Product design.\" photo={Thumbnail} />\n                    </Link> */}\n                    <Link to=\"/work/this+website\">\n                        <Card name=\"Portfolio\" desc=\"This is a work in progress.\" photo={Portrait} />\n                        {/* This explains the design and development process of this website. */}\n                    </Link>\n            </div>\n        )\n}\n \nexport default Work;","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n    \n    componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        window.scrollTo(0, 0)\n      }\n    }\n  \n    render() {\n      return this.props.children\n    }\n  }\n  \n  export default withRouter(ScrollToTop)","import React from \"react\"\nimport BluePic from \"./photos/blue_pic.jpg\"\nimport NovoSS from \"./photos/mark_novo_ss.png\"\nimport AboutFigma from \"./photos/portfolio_figma/about_figma.png\"\nimport WorkFigma from \"./photos/portfolio_figma/work_figma.png\"\nimport ProjFigma from \"./photos/portfolio_figma/proj_figma.png\"\n\nfunction ProjMyWebsite(props) {\n    return (\n        <div className=\"proj-body\">\n            {/* <img src={Thumbnail} alt=\"a photo of me\" className=\"project-photo\" /> */}\n            {/* bio or work first?\n            intended to only display a few works bc employers are busy\n            dark background is easier on the eyes\n            monotone color scheme emphasizes photos */}\n            <img src={BluePic} alt=\"\" className=\"proj-photo\" />\n            <h1 className=\"title1\">Portfolio</h1>\n            <p className=\"larticle\">\n                This is a work in progress. To find a design job, I needed a portfolio, so I spent the summer of 2020 making this website. \n            </p>\n            <br />\n            <p className=\"article\">\n                I chose not to use a website builder like Squarespace because I did not want to limit myself with their existing templates; I wanted the website to be my own. Additionally, I wanted to review the skills I learned in my <i>Client-Side Development</i> class; this was a great opportunity for me to practice the process of designing, coding, and deploying a website.\n            </p>\n            <br />\n            <h1 className=\"title1\">Design</h1>\n            <img src={NovoSS} alt=\"Mark Novo website template\" className=\"proj-photo\" />\n            <p className=\"article\">\n                First, I took a look at other portfolios and website templates for inspiration. I liked the aesthetic of the Mark Novo template from Squarespace; however, in terms of usability, there were a few places where it could be improved. First, the title for each project only appears when hovered over. Because the mobile version is identical, users are unable to view the titles at all (there's no way to hover on movile). Admittedly, my website likewise does not work on mobile but my design leaves the door open for this possibility.\n            </p>\n            <p className=\"article\">\n            <br />\n                Second, I was recommendeded to limit the site with my three best projects so that employers would have the patience to look through all of them. With only three projects, it would look silly to display them in two columns, so I opted for a single column instead.\n            </p>\n            {/* <img src={WorkSS} alt=\"prototype of the 'Work' page\" className=\"project-photo\" /> */}\n            <br />\n            <p className=\"project-article\">\n                To be continued . . .\n                {/* As you can probably tell from this website, I am a big fan of minimalism and believe that things should be kept as simple as possible for users to learn and use. Furthermore, a minimalistic site with monotone colors to make photos of work stand out more.My site only has two items on the nav bar if you exclude my name (which also takes you to the \"About\" screen) but I believe that these two items cover all the reasons why someone would visit my site. Other than these two items, I would have added a third one for \"Contact\" but I decided to follow the norm and have my contact information in the footer of the site. I did not write my name in the introduction because it is already written at the top of the website and I am not a fan of repetitive information. In order to make my site's usage as efficient as possible, I never repeat information so users will never spend extra time reading the same information twice. Debate whether logo should take you to home page. */}\n            </p>\n            <img src={AboutFigma} alt=\"\" className=\"proj-photo\" />\n            <p className=\"sarticle\"><br /></p>\n            <img src={WorkFigma} alt=\"\" className=\"proj-photo\" />\n            <p className=\"sarticle\"><br /></p>\n            <img src={ProjFigma} alt=\"\" className=\"proj-photo\" />\n            <p className=\"project-article\">\n                {/* Initially, I wanted to find a geometric font that had a condensed counterpart because that would allow the two fonts to synchronize well. There are not too many geometric fonts on Google Fonts so such a font did not exist so I gave up on the geometric part. I tried Open Sans along with Open Sans Condensed but the capital \"J\" letter really bothered me because it protruded out the bottom. Because my name has a \"J\" in it, this made the logo look awful. The other condensed fonts didn't fit the aesthetic I was going for. Thus, I changed my plan and ended up going for just a geometric font instead. Instead of having a condensed counter part, I would just use different weights along with capitalization to make it seem like two different fonts with synergy. The most popular geometric font on Google Fonts is Montserrat but I personally do not like the way the capital \"J\" and \"G\" look. Thus, I ended up finding a font called Poppins that has a perfectly circular capital G similar to Futura, which I am a fan of. */}\n            </p>\n        </div>\n    )\n}\n\nexport default ProjMyWebsite;","import React from \"react\"\n\nfunction ProjSecurate(props) {\n    return (\n        <div className=\"proj-body\">\n            {/* <img src={Thumbnail} alt=\"a photo of me\" className=\"project-photo\" /> */}\n            <h1>Securate</h1>\n            {/* <h2>Overview</h2> */}\n            <p className=\"larticle\">\n                In an age dominated by the internet, it is important to prevent our personal information from falling into the wrong hands. My team and I designed Securate to help smartphone users keep track of where their information is going, what it's being used for, and whether or not the process is secure.\n            </p>\n            <br />\n            <h3>Problem</h3>\n            <p>\n               Most people agree to privacy policies without reading them. In other words, they are authorizing the collection and usage of their personal information without knowing what will be collected and how it'll be used. Furthermore, many applications send and store personal information insecurely, allowing malicious people to access the information with little to no effort.\n            </p>\n            <br />\n            <h3>Team</h3>\n            <p>\n                I worked on Securate with three peers in my <i>Design Methods</i> class. I contributed to every phase of the project from conceptualization to prototyping.\n            </p>\n            <br />\n            <h2>Research</h2>\n            <p className=\"larticle\">\n                I read existing papers, sent out surveys, and conducted user interviews. \n            </p>\n            <br />\n            <p className=\"article\">\n                Because it takes less time to gather existing information, I always start off with literature review. Then, I used surveys and interviews to explore topics that were not covered by existing research. First, I use surveys to seeing the overall picture. Then, I dive into the specifics with interviews. Below are some key takeaways from my research.\n            </p>\n            <br />\n            <p className=\"article\">\n                Over 90% of consumers accept privacy policies without reading them. What are the reasons behind this?\n            </p>\n            <br />\n            <p className=\"article\">\n                All apps that collect information are required by law to have a privacy policy that states what information is collected, how information is used, and what information is shared. Sadly, no one reads these.\n            </p>\n            <br />\n            <p className=\"article\">\n                Personal information is any information that can be used to identify an individual. Some forms of personal information are deemed to be more sensitive than others (race, ethnicity, religion, health concerns, etc.). Thus, when assessing an app, we must take into consideration what types of information it collects.\n            </p>\n            <br />\n            <p className=\"article\">\n                Information privacy concerns are unaffected by gender and increase with age. Our userbase should mainly consist of adults.\n            </p>\n            <br />\n            <p className=\"article\">\n                A surprising amount of apps do not encrypt personal information. This allows anyone with basic technical knowledge to access the data for free. Our app should detect whether or not apps are encrypting personal information properly.\n            </p>\n            <br />\n            <p className=\"article\">\n                After learning as much as I could through existing papers, I sent out a survey. Below are the key takeaways.\n            </p>\n            <br />\n            <p className=\"article\">\n                Around 90% of users are comfortable with apps collecting their personal information for basic app functionality.\n            </p>\n            <br />\n            <p className=\"article\">\n                Around 50% of users are comfortable with apps collecting their personal information for developers to improve the app's performance.\n            </p>\n            <br />\n            <p className=\"article\">\n                Around 20% of users are comfortable with apps collecting their personal information for revenue.\n            </p>\n            <br />\n            <p className=\"article\">\n                “If the collection of information is for my benefit, then I'm OK with it. If it is for the company’s benefit, then I'm not OK with it.”\n            </p>\n            <br />\n            <p className=\"article\">\n                Many users were unclear about the consequences of giving away their personal information.\n            </p>\n            <br />\n            <h2>Design</h2>\n\n\n\n            {/* <p className=\"article\">\n                I feel like surveys are great at collecting answers but not ideal for explaining those answers. To understand the reasoning behind the answers, I conducted user interviews.\n            </p> */}\n            \n        </div>\n    )\n}\n\nexport default ProjSecurate;","import React from \"react\"\nimport SushiPhoto from \"./photos/sushi.jpg\"\nimport HoursPhoto from \"./photos/foodie_research/hours_daily.png\"\nimport KnownPhoto from \"./photos/foodie_research/features_known.png\"\nimport SortPhoto from \"./photos/foodie_research/foodie_card_sort.png\"\n// import FormDesign from \"./photos/form_design.jpg\"\nimport PersonaPhoto from \"./photos/foodie_persona.jpg\"\nimport RecipeIA from \"./photos/foodie_ia/recipe_ia.png\"\nimport CommunityIA from \"./photos/foodie_ia/community_ia.png\"\nimport AccountIA from \"./photos/foodie_ia/account_ia.png\"\nimport ProtoPhoto from \"./photos/foodie_figma.png\"\n\n\nfunction ProjFoodie(props) {\n    return (\n        <div className=\"proj-body\">\n            {/* <img src={Photo1} alt=\"a cup of coffee\" className=\"project-photo\" /> */}\n            <img src={SushiPhoto} alt=\"salmon nigiri\" className=\"cover-photo\" />\n            <p className=\"caption\">\n                pc <a href=\"https://unsplash.com/@cathsmithphoto\" target=\"_blank\" rel=\"noopener noreferrer\">Cath Smith</a>\n            </p>\n            \n            <h1 className=\"title1\">Foodie</h1>\n            \n            <p className=\"larticle\">\n                For the final project in my information architecture class, I redesigned Foodie, a fictitious app for all things food-related. Popular features include its recipe collection, online cookware shop, and a social media platform where cooking enthusiasts can share their creations and connect.\n            </p>\n            <br />\n            <h2 className=\"title2\">Problem</h2>\n            <p className=\"article\">\n                Unfortunately, with all the information and services Foodie offer, users found the app to be overwhelming and difficult to navigate through. When discovering something they liked, they were unable to find related content and products. Many promising features were hidden under parts of the app no one visited, so they were never exposed to users.\n            </p>\n            <br />\n            <h2 className=\"title2\">Team</h2>\n            <p className=\"article\">\n                I worked on Foodie with three peers in my information architecture class; nevertheless, everything discussed below are my original thoughts.\n            </p>\n            <br />\n            {/* <h2 className=\"title2\">Overview</h2>\n            <p className=\"article\">\n                Being an information architecture course, the ultimate goal of this project was to improve Foodie's information architecture. Throughout the process, I surveyed users for design insights, . . .\n                \n                Smaller objectives included linking related content together, exposing previously unknown features, and completing wireframes.\n\n                Complete this part after finishing the rest.\n            </p> */}\n            \n            <h1 className=\"title1\">Research</h1>\n            \n            <p className=\"larticle\">\n                The professor gave us documents containing user data, Foodie's vision and objectives, labels and hierarchies used in the original Foodie app, etc. These documents helped us outline the issues described under \"Problem.\" However, these documents did not provide us with everything we needed.\n            </p>\n            <br />\n            <h2 className=\"title2\">Survey</h2>\n            <p className=\"article\">\n                To design the app's information architecture, I needed to know the importance of each of Foodie's features; naturally, I wanted important features to be easier to access. To gather this information, I sent out a short survey. The survey consisted of two parts.\n            </p>\n            <br />\n            <p className=\"article\">\n                The first part intends to understand the participant’s food background so I could group users under different categories. \n            </p>\n            <img src={HoursPhoto} alt=\"survey question about hours spent making food daily\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                To give you an idea, one of the questions asks how many hours the participant spends making food on a daily basis. This question gives me a quantitative understanding of the participant's involvement with food. At first, I used the term “cooking” instead of “making food,” but I realized that some people might not associate the term “cooking” with actions such as baking cookies (baking) or preparing sushi (uncooked). When designing an online survey, I am especially clear with my wording because minute details can completely change a question’s meaning. Because it's online, participants are unable to clear up their misunderstandings because there are no researchers present to answer their questions.\n            </p>\n            <br />\n            <p className=\"article\">\n                The second part asks for the participant's opinion on Foodie’s different features. Again, my purpose was to understand which services the users valued the most. I was searching for features that defined Foodie as well as hidden features no one knew about. \n            </p>\n            <img src={KnownPhoto} alt=\"survey question about Foodie features the participant knows about\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                Simply asking, \"Which features do you use the most?\" would have been insufficient because many promising features were hidden from users in the orignial app; users would have probably enjoyed these services if they knew of their existence. Thus, I had to ask the participant about features they would potentially use, assuming they were oblivious. Likewise, I was curious about features the participant did not care for. Unpopular features would either be relegated to a deeper layer or removed completely.\n            </p>\n            {/* <br />\n            <h2 className=\"title2\">Attention Check</h2>\n            <img src={SurveyPhoto} alt=\"survey question about making food\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                The assignment required us to ask every question in a multiple-choice format. Sadly, multiple-choice questions allow apathetic participants (who are in it for the gift card) to cruise through the survey by selecting random answers. To counter this, I threw in a question to verify that participants were paying attention. Additionally, I only asked succint questions. With fewer words to read, impatient participants would be more likely to read through my survey.\n            </p> */}\n            {/* <img src={FormDesign} alt=\"form design tip I followed\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                In class, we learned ways to optimize the user experience for survey participants. For example, I used radio buttons and checkboxes instead of dropdown menus; being able to see every option by default allows the participant to quickly scan through the form with minimal action. \n            </p> */}\n            <br />\n            <p className=\"article\">\n                It is important to note Foodie is not a real app so no one actually participated in the survey. Nevertheless, I  crafted it meticulously, as if it were to be used. Additionally, if we were seriously conducting user research, it would have been more effective to ask qualitative questions in a user interview.\n            </p>\n            <p className=\"article\"><br /></p>\n            <h2 className=\"title2\">Persona</h2>\n            <p className=\"article\">\n                We created personas with the provided documents to visualize our users. Here is a persona I made.\n            </p>\n            <img src={PersonaPhoto} alt=\"persona I created\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                I am particularly proud of her quote, which may have been inspired by an anime I watched called <i>Food Wars!</i>. Jokes aside, I wanted her quote to feel like something a real person would say. If someone cooks for a living, I figured there was probably more to it than \"I like to eat food.\"\n            </p>\n            \n            <p className=\"article\"><br /></p>\n            <h2 className=\"title2\">Card Sort</h2>\n            <p className=\"article\">\n                Card sorts were another tool that helped us determine Foodie's information architecture. They showed us how others would potentially navigate through our app. Unlike the previous survey, the card sorts were actually doable with real participants.\n            </p>\n            <img src={SortPhoto} alt=\"card sort for Foodie's IA\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                To start, we made a card for every feature offered by Foodie. Then, we asked participants to group the related cards, labelling different groups as they went. The groups and labels the participants created helped us determine the actual labels users would click on when navigating to each feature. \n            </p>\n            \n            <h1 className=\"title1\">Information Architecture</h1>\n\n            <p className=\"larticle\">\n                {/* Now that I had an understanding of the way different features were perceived by the users, I was comfortable with redesigning the app’s information architecture; I now knew which services should be quickly accessible from the home page and which services should be in more niche locations. */}\n                With research, we discovered valuable input on how to structure Foodie's information. With my survey, we would have understood which features to prioritize on the navigation bar. Additionally, with the card sort, we observed which labels others would have clicked on to navigate to each service.\n            </p>\n            <br />\n            <h2 className=\"title2\">Site Map</h2>\n            <p className=\"article\">\n                We started with a top-down approach, beginning with labels that would be accessible from the home page. My group estimated that the three most important features of Foodie were the recipe database, shop, and social media platform (we would have discovered this with the survey). Because these were the main features, navigation to these pages should be instantaneous. Thus, the first two labels we decided on were “Recipe Book” and “Shop,” with the social media platform being the home page.\n            </p>\n            <img src={RecipeIA} alt=\"information architecture for the 'recipe' label\" className=\"proj-photo\" />\n            <br />\n            <p className=\"article\">\n                I wanted to make the social media newsfeed our home page because I saw it as a bridge that connected the app’s other features. For example, when a user posts a photo of some fish tacos he made, he could link the recipe he used to make the tacos (from the recipe book) and the griddle he bought to fry the tacos (from the shope). Not only does this feature help users find related content (fixing an issue with the original app), it also seamlessly connects the rest of the app like an ecosystem.\n            </p>\n            <br />\n            <p className=\"article\">\n                We decided that all the other services on Foodie could be grouped under a label called “Community” because they were not as important.\n            </p>\n            <img src={CommunityIA} alt=\"information architecture for the 'community' label\" className=\"proj-photo\" />\n            <p className=\"sarticle\">\n                This included less popular features like the forum, local event database and user database. Initially, I thought about about including the private messaging feature under here as well; however, messaging is heavily used in other social media apps so in the end, I decided to make it accessible from the home page.\n            </p>\n            <br />\n            <p className=\"article\">\n                Last but not least, on the first layer of our information architecture, we included an “Account” label which includes the standard “Profile” and “Settings” pages. As a result, our first layer consisted of \"Recipe Book,\" \"Shop,\" \"Community,\" and \"Account.\"\n            </p>\n            <img src={AccountIA} alt=\"information architecture for the 'account' label\" className=\"proj-photo\" />\n            <p className=\"article\">\n                A significant change I made to our information architecture was deciding to combine the “Video Tutorial” and “Recipe Book” sections. The old app had separate search pages for finding recipes and videos; however, because Foodie’s videos and recipes both serve a similar purpose of teaching the user how to cook certain dishes, this made the app unnecessarily complex. Instead, we decided to include videos on the same page as their corresponding recipes. If a video did not have a related recipe page, we could process the video into a written recipe with speech recognition. Additionally, this adds accessibility for deaf people who would prefer something written over audio instructions. \n                \n                {/* It also solves the problem of being unable to find related content; previously, the video and recipe for the same dish were not guaranteed to be linked together. */}\n            </p>\n            \n            <p className=\"article\"><br /></p>\n            <h2 className=\"title2\">Tree Test</h2>\n            <p className=\"article\">\n                Throughout the process, we conducted tree tests with our site map to confirm that navigation was as intuitive as possible. In other words, we would ask participants to find a target page (by picking through labels on the spreadsheet), observing their thought process as well as any troubles they run into.\n            </p>\n\n            \n            <h1 className=\"title1\">Design</h1>\n            <img src={ProtoPhoto} alt=\"high fidelity prototype I created for Foodie\" className=\"proj-photo\" />\n            <p className=\"article\">\n                To be continued . . .\n            {/* For our wireframes, I had the opportunity to work on the home page. Although we were only required to complete wireframes, I upgraded my part into a high-fidelity prototype with Figma so I could show it off here. */}\n            </p>\n            {/* <p className=\"article\">\n            For the main color of the app, I used salmon pink because the color is named after food. I used a font called \"Lobster\" for a similar reason.\n            </p>\n            <br />\n            <p className=\"article\">\n            The bottom nav is our main nav bar, which contains, from left to right, “home,” “recipe book,” “shop,” “community,” and “account.” On the top nav, we have notifications and private messages, which are standard for social media platforms. Once a user taps into a post, the notification button changes into a back button and the bottom nav turns into a comment-entry bar.\n            </p>\n            <br />\n            <p className=\"article\">\n            On the surface, my home page looks similar to Instagram but there are some key differences. First, I did not want to replicate Instagram’s liking mechanism, which is double tapping, because that would be stealing. Moreover, it would not flow well because unlike Instagram, tapping on a post in Foodie expands its contents. Instead, I increased the size of the like and comment buttons to make them easier to tap. I placed the buttons in a location where users would feel comfortable reaching them while operating a phone with one hand. Furthermore, upon hearing user feedback, there will be an option in the settings to switch the like and comment buttons to the left side of the screen for left-handed users. Similarly, I did not replicate Instagram’s private messaging icon, which is a paper plane, because before using Instagram, I do not think many people related paper planes with messages. Instead, I chose a mail icon to represent an inbox, which in Foodie’s context would mean private messages. I couldn’t use the speech bubble icon because it was already being used for comments.\n            </p>\n            <br />\n            <p className=\"article\">\n            Like I explained before, when a post is expanded, the user will be able to scroll through cards to explore related content and products mentioned in the post. Here you can see the recipe and griddle used to make the fish tacos.\n            </p>\n            \n            <h1 className=\"title1\">Epilogue</h1>\n            \n            <p className=\"article\">\n            If you made it to the end, thanks for reading! This came out a lot longer than I expected! I noticed there was plenty of nitpicking due to my detail-oriented nature so I'll work on shortening my explanations next time! I realized it is quite wordy but it felt unethical to cut parts out due to the amount of thought I had put into this project.\n            </p> */}\n\n        </div>\n    )\n}\n\nexport default ProjFoodie;","import React from 'react';\nimport './App.css';\nimport { Route, Link, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport About from './About.js'\nimport Work from './Work.js'\nimport ScrollToTop from './ScrollToTop.js'\nimport ProjMyWebsite from './ProjMyWebsite'\nimport ProjSecurate from './ProjSecurate'\nimport ProjFoodie from './ProjFoodie'\n\nfunction App() {\n  // TODO: Fix link iteraction (active link should be white)\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <ScrollToTop>\n          <nav>\n            <Link to=\"/about\" id=\"logo\">Jeffrey Wang</Link>\n            <div className=\"nav-row\">\n              <Link to=\"/about\" className=\"nav-col\">About</Link>\n              <Link to=\"/work\" className=\"nav-col\">Work</Link>\n            </div>\n          </nav>\n          <Switch>\n            <Redirect exact path=\"/\" to=\"/about\" />\n            <Route path=\"/about\" component={About} />\n            <Route exact path=\"/work\" component={Work} />\n            <Route path=\"/work/foodie\" component={ProjFoodie} />\n            <Route path=\"/work/securate\" component={ProjSecurate} />\n            <Route path=\"/work/this+website\" component={ProjMyWebsite} />\n          </Switch>\n        </ScrollToTop>\n      </HashRouter>\n      <footer>\n        <p id=\"contact\">Contact</p>\n        <br />\n        <a className=\"contact-info\" href=\"https://www.linkedin.com/in/jeffrey-wang-327b0915b/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n        <br />\n        <a className=\"contact-info\" href=\"mailto:jeffwhy99@gmail.com\">Mail</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}